{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andra\\\\OneDrive\\\\Desktop\\\\React\\\\portfolio\\\\src\\\\container\\\\Header\\\\Header.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport AnimatedText from \"./AnimatedText\";\nimport \"./Header.scss\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n  const [replay, setReplay] = useState(true);\n  // Placeholder text data, as if from API\n  const placeholderText = [{\n    type: \"heading1\",\n    text: \"Framer Motion\"\n  }, {\n    type: \"heading2\",\n    text: \"Animating responsive text!\"\n  }];\n  const container = {\n    visible: {\n      transition: {\n        staggerChildren: 0.025\n      }\n    }\n  };\n\n  // Quick and dirt for the example\n  const handleReplay = () => {\n    setReplay(!replay);\n    setTimeout(() => {\n      setReplay(true);\n    }, 600);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"App\",\n      initial: \"hidden\"\n      // animate=\"visible\"\n      ,\n      animate: replay ? \"visible\" : \"hidden\",\n      variants: container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: placeholderText.map((item, index) => {\n          return /*#__PURE__*/_createElement(AnimatedText, {\n            ...item,\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 20\n            }\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReplay,\n        children: [\"Replay \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u27F2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"ZIsyKjFuIpJBmLm2E+s+18AiTVM=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","motion","AnimatedText","Header","replay","setReplay","placeholderText","type","text","container","visible","transition","staggerChildren","handleReplay","setTimeout","map","item","index"],"sources":["C:/Users/andra/OneDrive/Desktop/React/portfolio/src/container/Header/Header.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport AnimatedText from \"./AnimatedText\";\r\nimport \"./Header.scss\";\r\n\r\nexport default function Header() {\r\n  const [replay, setReplay] = useState(true);\r\n  // Placeholder text data, as if from API\r\n  const placeholderText = [\r\n    { type: \"heading1\", text: \"Framer Motion\" },\r\n    {\r\n      type: \"heading2\",\r\n      text: \"Animating responsive text!\"\r\n    }\r\n  ];\r\n\r\n  const container = {\r\n    visible: {\r\n      transition: {\r\n        staggerChildren: 0.025\r\n      }\r\n    }\r\n  };\r\n\r\n  // Quick and dirt for the example\r\n  const handleReplay = () => {\r\n    setReplay(!replay);\r\n    setTimeout(() => {\r\n      setReplay(true);\r\n    }, 600);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <motion.div\r\n        className=\"App\"\r\n        initial=\"hidden\"\r\n        // animate=\"visible\"\r\n        animate={replay ? \"visible\" : \"hidden\"}\r\n        variants={container}\r\n      >\r\n        <div className=\"container\">\r\n          {placeholderText.map((item, index) => {\r\n            return <AnimatedText {...item} key={index} />;\r\n          })}\r\n        </div>\r\n        <button onClick={handleReplay}>\r\n          Replay <span>‚ü≤</span>\r\n        </button>\r\n      </motion.div>\r\n    </div>\r\n\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,eAAe;AAAC;AAAA;AAEvB,eAAe,SAASC,MAAM,GAAG;EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAC1C;EACA,MAAMM,eAAe,GAAG,CACtB;IAAEC,IAAI,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAgB,CAAC,EAC3C;IACED,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE;EACR,CAAC,CACF;EAED,MAAMC,SAAS,GAAG;IAChBC,OAAO,EAAE;MACPC,UAAU,EAAE;QACVC,eAAe,EAAE;MACnB;IACF;EACF,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAM;IACzBR,SAAS,CAAC,CAACD,MAAM,CAAC;IAClBU,UAAU,CAAC,MAAM;MACfT,SAAS,CAAC,IAAI,CAAC;IACjB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,uBACxB,QAAC,MAAM,CAAC,GAAG;MACT,SAAS,EAAC,KAAK;MACf,OAAO,EAAC;MACR;MAAA;MACA,OAAO,EAAED,MAAM,GAAG,SAAS,GAAG,QAAS;MACvC,QAAQ,EAAEK,SAAU;MAAA,wBAEpB;QAAK,SAAS,EAAC,WAAW;QAAA,UACvBH,eAAe,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;UACpC,oBAAO,eAAC,YAAY;YAAA,GAAKD,IAAI;YAAE,GAAG,EAAEC,KAAM;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,EAAG;QAC/C,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAQ,OAAO,EAAEJ,YAAa;QAAA,WAAC,SACtB;UAAA,UAAM;QAAC;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QACd;IAAA;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACT;AAGV;AAAC,GAhDuBV,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}